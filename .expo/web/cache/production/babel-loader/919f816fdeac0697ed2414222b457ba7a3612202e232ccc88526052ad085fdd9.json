{"ast":null,"code":"var _regeneratorRuntime=require(\"@babel/runtime/regenerator\");var express=require('express');var ejs=require('ejs');var bodyParser=require('body-parser');var mysql=require('mysql');var session=require('express-session');var app=express();var port=8000;var expressSanitizer=require('express-sanitizer');app.use(bodyParser.urlencoded({extended:true}));app.use(expressSanitizer());app.use(express.static(__dirname+'/public'));app.use(session({secret:'somerandomstuff',resave:false,saveUninitialized:false,cookie:{expires:600000}}));var db=mysql.createConnection({host:'localhost',user:'appuser',password:'qwerty',database:'ai'});db.connect(function(err){if(err){throw err;}console.log('Connected to database');});global.db=db;app.set('views',__dirname+'/views');app.set('view engine','ejs');app.engine('html',ejs.renderFile);var webData={webApp:'vitAI'};require(\"./routes/main\")(app,webData);app.listen(port,function(){return console.log(\"Example app listening on port \"+port+\"!\");});var _require=require('node-nlp'),NlpManager=_require.NlpManager;var manager=new NlpManager({languages:['en']});manager.addDocument('en','hello','greetings.hello');manager.addDocument('en','hi','greetings.hi');manager.addDocument('en','hey','greetings.hey');manager.addDocument('en','yo','greetings.yo');manager.addDocument('en','how are you?','greetings.how_are_you');manager.addDocument('en','what can you do?','greetings.what_can_you_do');manager.addDocument('en','kl','greetings.kl');manager.addDocument('en','goodbye','greetings.bye');manager.addDocument('en','bye for now','greetings.bye');manager.addDocument('en','stop','greetings.bye');manager.addAnswer('en','greetings.hello','Hello there!');manager.addAnswer('en','greetings.hi','Hi there!');manager.addAnswer('en','greetings.hey','Heyyyy!');manager.addAnswer('en','greetings.yo','Yo Wagwan!');manager.addAnswer('en','greetings.bye','Till next time!');manager.addAnswer('en','greetings.how_are_you','I am fine, thank you!');manager.addAnswer('en','greetings.what_can_you_do','I am an AI chatbot. I will try and help you with anything. Ask me something!');manager.addAnswer('en','greetings.kl','Yh! I am pretty cool');(function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(manager.train());case 2:manager.save();case 3:case\"end\":return _context.stop();}},null,null,null,Promise);})();var readline=require('readline');var rl=readline.createInterface({input:process.stdin,output:process.stdout});rl.setPrompt('You: ');rl.prompt();rl.on('line',function _callee2(line){var response;return _regeneratorRuntime.async(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(manager.process('en',line));case 2:response=_context2.sent;if(response.answer){console.log('Bot:',response.answer);}else{console.log(\"Bot: I'm pretty new at this. Please rephrase or try again later.\");}rl.prompt();case 5:case\"end\":return _context2.stop();}},null,null,null,Promise);});","map":{"version":3,"names":["express","require","ejs","bodyParser","mysql","session","app","port","expressSanitizer","use","urlencoded","extended","static","__dirname","secret","resave","saveUninitialized","cookie","expires","db","createConnection","host","user","password","database","connect","err","console","log","global","set","engine","renderFile","webData","webApp","listen","_require","NlpManager","manager","languages","addDocument","addAnswer","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","train","save","stop","Promise","readline","rl","createInterface","input","process","stdin","output","stdout","setPrompt","prompt","on","_callee2","line","response","_callee2$","_context2","sent","answer"],"sources":["C:/Users/Kamal/Documents/fyp/index.js"],"sourcesContent":["// Import the modules we need\r\nvar express = require('express');\r\nvar ejs = require('ejs');\r\nvar bodyParser = require('body-parser');\r\nconst mysql = require('mysql');\r\nvar session = require('express-session');\r\n\r\n// Create the express application object\r\nconst app = express();\r\nconst port = 8000;\r\nconst expressSanitizer = require('express-sanitizer');\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(expressSanitizer());\r\n\r\n// Set up css\r\napp.use(express.static(__dirname + '/public'));\r\n\r\n// Create a session\r\napp.use(\r\n  session({\r\n    secret: 'somerandomstuff',\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n      expires: 600000\r\n    }\r\n  })\r\n);\r\n\r\n// Define the database connection\r\nconst db = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'appuser',\r\n  password: 'qwerty',\r\n  database: 'ai'\r\n});\r\n// Connect to the database\r\ndb.connect(err => {\r\n  if (err) {\r\n    throw err;\r\n  }\r\n  console.log('Connected to database');\r\n});\r\nglobal.db = db;\r\n\r\n// Set the directory where Express will pick up HTML files\r\n// __dirname will get the current directory\r\napp.set('views', __dirname + '/views');\r\n\r\n// Tell Express that we want to use EJS as the templating engine\r\napp.set('view engine', 'ejs');\r\n\r\n// Tells Express how we should process html files\r\n// We want to use EJS's rendering engine\r\napp.engine('html', ejs.renderFile);\r\n\r\n// Define our data\r\nvar webData = { webApp: 'vitAI' };\r\n\r\n// Requires the main.js file inside the routes folder passing in the Express app and data as arguments.  All the routes will go in this file\r\nrequire('./routes/main')(app, webData);\r\n\r\n// Start the web app listening\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));\r\n\r\n// Implement NLP functionality by installing the node-nlp module\r\nconst { NlpManager } = require('node-nlp');\r\n\r\n// Create an instance of NlpManager and ensure the language is english\r\nconst manager = new NlpManager({ languages: ['en'] });\r\n\r\n// Add some training data as this adds responses based on users inputs and this is used for training.\r\nmanager.addDocument('en', 'hello', 'greetings.hello');\r\nmanager.addDocument('en', 'hi', 'greetings.hi');\r\nmanager.addDocument('en', 'hey', 'greetings.hey');\r\nmanager.addDocument('en', 'yo', 'greetings.yo');\r\nmanager.addDocument('en', 'how are you?', 'greetings.how_are_you');\r\nmanager.addDocument('en', 'what can you do?', 'greetings.what_can_you_do');\r\nmanager.addDocument('en', 'kl', 'greetings.kl');\r\n\r\nmanager.addDocument('en', 'goodbye', 'greetings.bye');\r\nmanager.addDocument('en', 'bye for now', 'greetings.bye');\r\nmanager.addDocument('en', 'stop', 'greetings.bye');\r\n\r\n// Define responses\r\nmanager.addAnswer('en', 'greetings.hello', 'Hello there!');\r\nmanager.addAnswer('en', 'greetings.hi', 'Hi there!');\r\nmanager.addAnswer('en', 'greetings.hey', 'Heyyyy!');\r\nmanager.addAnswer('en', 'greetings.yo', 'Yo Wagwan!');\r\nmanager.addAnswer('en', 'greetings.bye', 'Till next time!');\r\nmanager.addAnswer('en', 'greetings.how_are_you', 'I am fine, thank you!');\r\nmanager.addAnswer('en', 'greetings.what_can_you_do', 'I am an AI chatbot. I will try and help you with anything. Ask me something!');\r\nmanager.addAnswer('en', 'greetings.kl', 'Yh! I am pretty cool');\r\n\r\n// Train the model using the manager and what inputs are given to the manager\r\n(async () => {\r\n    await manager.train();\r\n    manager.save();\r\n})();\r\n\r\n// Terminal implementation using readline so I can respond in terminal\r\nconst readline = require('readline');\r\n\r\n//readline or rl used as variable to set user input and bot output\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout\r\n});\r\n\r\n//set user input\r\nrl.setPrompt('You: ');\r\nrl.prompt();\r\n\r\n//set bot output based on the training given to the manager\r\nrl.on('line', async line => {\r\n    const response = await manager.process('en', line);\r\n    if (response.answer) {\r\n      console.log('Bot:', response.answer);\r\n    } else {\r\n      console.log(\"Bot: I'm pretty new at this. Please rephrase or try again later.\");\r\n    }\r\n    rl.prompt();\r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}